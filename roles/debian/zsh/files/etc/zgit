# ─── GIT PROMPT CONFIGURATION ────────────────────────────────────────────────

# Répertoire du script python gitstatus.py
__GIT_PROMPT_DIR="/etc/zsh"  # ← change si nécessaire

# Hooks pour mettre à jour les infos Git
function chpwd_update_git_vars() {
    update_current_git_vars
}
function preexec_update_git_vars() {
    case "$2" in
        git*|hub*|gh*|stg*)
            __EXECUTED_GIT_COMMAND=1
        ;;
    esac
}
function precmd_update_git_vars() {
    if [ -n "$__EXECUTED_GIT_COMMAND" ] || [ ! -n "$ZSH_THEME_GIT_PROMPT_CACHE" ]; then
        update_current_git_vars
        unset __EXECUTED_GIT_COMMAND
    fi
}

autoload -U add-zsh-hook
add-zsh-hook chpwd chpwd_update_git_vars
add-zsh-hook precmd precmd_update_git_vars
add-zsh-hook preexec preexec_update_git_vars

# Fonction pour récupérer l'état Git depuis le script Python
function update_current_git_vars() {
    unset __CURRENT_GIT_STATUS

    local gitstatus="$__GIT_PROMPT_DIR/gitstatus.py"
    _GIT_STATUS=$(python3 ${gitstatus} 2>/dev/null)
    __CURRENT_GIT_STATUS=("${(@s: :)_GIT_STATUS}")
    GIT_BRANCH=$__CURRENT_GIT_STATUS[1]
    GIT_AHEAD=$__CURRENT_GIT_STATUS[2]
    GIT_BEHIND=$__CURRENT_GIT_STATUS[3]
    GIT_STAGED=$__CURRENT_GIT_STATUS[4]
    GIT_CONFLICTS=$__CURRENT_GIT_STATUS[5]
    GIT_CHANGED=$__CURRENT_GIT_STATUS[6]
    GIT_UNTRACKED=$__CURRENT_GIT_STATUS[7]
    GIT_STASHED=$__CURRENT_GIT_STATUS[8]
    GIT_CLEAN=$__CURRENT_GIT_STATUS[9]
}

# Fonction de formatage du prompt Git
function git_super_status() {
    precmd_update_git_vars
    if [ -n "$__CURRENT_GIT_STATUS" ]; then
        STATUS="$ZSH_THEME_GIT_PROMPT_PREFIX$ZSH_THEME_GIT_PROMPT_BRANCH$GIT_BRANCH%{${reset_color}%}"
        if [ "$GIT_BEHIND" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_BEHIND$GIT_BEHIND%{${reset_color}%}"
        fi
        if [ "$GIT_AHEAD" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_AHEAD$GIT_AHEAD%{${reset_color}%}"
        fi
        STATUS+="$ZSH_THEME_GIT_PROMPT_SEPARATOR"
        if [ "$GIT_STAGED" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_STAGED$GIT_STAGED%{${reset_color}%}"
        fi
        if [ "$GIT_CONFLICTS" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_CONFLICTS$GIT_CONFLICTS%{${reset_color}%}"
        fi
        if [ "$GIT_CHANGED" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_CHANGED$GIT_CHANGED%{${reset_color}%}"
        fi
        if [ "$GIT_UNTRACKED" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_UNTRACKED$GIT_UNTRACKED%{${reset_color}%}"
        fi
        if [ "$GIT_STASHED" -ne "0" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_STASHED$GIT_STASHED%{${reset_color}%}"
        fi
        if [ "$GIT_CLEAN" -eq "1" ]; then
            STATUS+="$ZSH_THEME_GIT_PROMPT_CLEAN"
        fi
        STATUS+="%{${reset_color}%}$ZSH_THEME_GIT_PROMPT_SUFFIX"
        echo "$STATUS"
    fi
}

# Apparence du prompt Git
ZSH_THEME_GIT_PROMPT_PREFIX="%F{%(#.red.blue)}(%F{1;31}%f"
ZSH_THEME_GIT_PROMPT_SUFFIX="%F{%(#.red.blue)})─"
ZSH_THEME_GIT_PROMPT_SEPARATOR="|"
ZSH_THEME_GIT_PROMPT_BRANCH="%F{95}"
ZSH_THEME_GIT_PROMPT_STAGED="%F{91}%{󰧞%G%}"
ZSH_THEME_GIT_PROMPT_CONFLICTS="%F{91}%{%G%}"
ZSH_THEME_GIT_PROMPT_CHANGED="%F{94}%{%G%}"
ZSH_THEME_GIT_PROMPT_BEHIND="%{%G%}"
ZSH_THEME_GIT_PROMPT_AHEAD="%{%G%}"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{96}%{…%G%}"
ZSH_THEME_GIT_PROMPT_STASHED="%F{94}%{%G%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%F{92}%{%G%}"

# Affichage dans le prompt à droite (facultatif)
RPROMPT='$(git_super_status)'
